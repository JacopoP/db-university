Contare quanti iscritti ci sono stati ogni anno
	SELECT YEAR(enrolment_date) AS 'enrolment_year', COUNT(*) 
	FROM `students` 
	GROUP BY enrolment_year;

Contare gli insegnanti che hanno l'ufficio nello stesso edificio
	SELECT office_address, COUNT(*)
	FROM `teachers`
	GROUP BY office_address;

Calcolare la media dei voti di ogni appello d'esame
	SELECT exam_id, AVG(vote)
	FROM `exam_student`
	GROUP BY exam_id;

Contare quanti corsi di laurea ci sono per ogni dipartimento
	SELECT department_id, COUNT(*)
	FROM `degrees`
	GROUP BY department_id;


Selezionare tutti gli studenti iscritti al Corso di Laurea in Economia
	SELECT *
	FROM students
	JOIN degrees
 	   ON students.degree_id = degrees.id
	WHERE degrees.name LIKE 'Corso di Laurea in Economia';

Selezionare tutti i Corsi di Laurea Magistrale del Dipartimento di Neuroscienze
	SELECT *
	FROM degrees
	JOIN departments
	    ON degrees.department_id = departments.id
	WHERE departments.name LIKE 'Dipartimento di Neuroscienze';

Selezionare tutti i corsi in cui insegna Fulvio Amato (id=44)
	SELECT *
	FROM courses
	JOIN course_teacher
	    ON course_teacher.course_id = courses.id
	JOIN teachers
	    ON course_teacher.teacher_id = teachers.id
	WHERE teachers.id = 44;

Selezionare tutti gli studenti con i dati relativi al corso di laurea a cui sono iscritti e il relativo dipartimento, in ordine alfabetico per cognome e nome
	SELECT students.name, students.surname, degrees.*, departments.name
	FROM students
	JOIN degrees
	    ON students.degree_id = degrees.id
	JOIN departments
	    ON degrees.department_id = departments.id
	ORDER BY students.surname DESC, students.name DESC;

Selezionare tutti i corsi di laurea con i relativi corsi e insegnanti
	SELECT degrees.name, courses.name, teachers.name, teachers.surname
	FROM degrees
	JOIN courses
  	  ON courses.degree_id = degrees.id
	JOIN course_teacher
 	   ON courses.id = course_teacher.course_id
	JOIN teachers
  	  ON teachers.id = course_teacher.teacher_id;

Selezionare tutti i docenti che insegnano nel Dipartimento di Matematica (54)
	SELECT DISTINCT teachers.name, teachers.surname, departments.name
	FROM teachers
	JOIN course_teacher
  	  ON teachers.id = course_teacher.teacher_id
	JOIN courses
  	  ON courses.id = course_teacher.course_id
	JOIN degrees
  	  ON degrees.id = courses.degree_id
	JOIN departments
  	  ON departments.id = degrees.department_id
	WHERE departments.name = 'Dipartimento di Matematica';

BONUS: Selezionare per ogni studente quanti tentativi dâ€™esame ha sostenuto per superare ciascuno dei suoi esami
	SELECT students.name, students.surname, students.registration_number, exam_student.student_id, courses.id, COUNT(*) AS 'tries', MAX(exam_student.vote) AS 'best_vote'
    	FROM students
    	JOIN exam_student
      	ON exam_student.student_id = students.id
    	JOIN exams
      	ON exam_student.exam_id = exams.id
    	JOIN courses
      	ON exams.course_id = courses.id
    	GROUP BY exam_student.student_id, courses.id HAVING best_vote >= 18;
	